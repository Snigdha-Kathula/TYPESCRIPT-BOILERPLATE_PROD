apiVersion: apps/v1
kind: Deployment
metadata:
  name: anchor-domain-service-deploy
  annotations:
    "sidecar.jaegertracing.io/inject": "true"
  labels:
    kube-monkey/enabled: enabled
    kube-monkey/identifier: anchor-domain-service-deploy
    kube-monkey/mtbf: "1"
    kube-monkey/kill-mode: "fixed"
    kube-monkey/kill-value: "1"
    tags.datadoghq.com/env: GIT_ENV
    tags.datadoghq.com/service: "anchor-domain-service"
    tags.datadoghq.com/version: ANCHOR_DOMAIN_SERVICE_VERSION
    app: anchor-domain-service 
spec:
  replicas: 1
  selector:
    matchLabels:
      app: anchor-domain-service
  template:
    metadata:
      labels:
        app: anchor-domain-service
        kube-monkey/enabled: enabled
        kube-monkey/identifier: anchor-domain-service-deploy
        kube-monkey/mtbf: "1"
        kube-monkey/kill-mode: "fixed"
        kube-monkey/kill-value: "1"
        tags.datadoghq.com/env: GIT_ENV
        tags.datadoghq.com/service: "anchor-domain-service"
        tags.datadoghq.com/version: ANCHOR_DOMAIN_SERVICE_VERSION
        app: anchor-domain-service 
    spec:
      securityContext:
        runAsUser: 10001
        runAsGroup: 10002
        runAsNonRoot: true
      priorityClassName: "service-priority-class"
      containers:
        - name: anchor-domain-service
          image: ghcr.io/incred-engineers/anchor-domain-service/anchor-domain-service:ANCHOR_DOMAIN_SERVICE_VERSION
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: NODE_ENV
              value: GIT_ENV
            - name: NODE_CONFIG_DIR
              value: config:secret
          resources:
            limits:
              cpu: 1000m
              memory: 4000Mi
            requests:
              cpu: 500m
              memory: 1000Mi
          volumeMounts:
            # - name: credentials-volume
            #   mountPath: /usr/src/app/credentials.json
            #   subPath: credentials.json
            # - name: secret-volume
            #   mountPath: /app/secret/
            - name: config-volume
              mountPath: /app/config/GIT_ENV.json 
              subPath: GIT_ENV.json 
              readOnly: true
          securityContext:    
            capabilities:
              drop:
                - all
              add: ['NET_BIND_SERVICE']
            allowPrivilegeEscalation: false  
           # readOnlyRootFilesystem: true     
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 10
            timeoutSeconds: 30
            periodSeconds: 10
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 10
            timeoutSeconds: 30
            periodSeconds: 2
            failureThreshold: 100
      volumes:
        # - name: secret-volume
        #   csi:
        #     driver: secrets-store.csi.k8s.io
        #     readOnly: true
        #     volumeAttributes:
        #       secretProviderClass: anchor-domain-service-secret
        # - name: credentials-volume
        #   csi:
        #     driver: secrets-store.csi.k8s.io
        #     readOnly: true
        #     volumeAttributes:
        #       secretProviderClass: credentials-secret
        - name: config-volume
          configMap:
            name: anchor-domain-service-config      
      imagePullSecrets:
        - name: incredreglatest
